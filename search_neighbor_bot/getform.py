from aiogram import types
import django
import os
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "search_neighbor_bot.settings")
django.setup()
import logging


# –ö–ª–∞—Å—Å –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Ñ—É–Ω—Ü–∏—é –≤—ã–≤–æ–¥–∞ –∞–Ω–∫–µ—Ç—ã –≤ —á–∞—Ç
class UserForm:
    def __init__(self, avatar, caption, full_info, apartment_photos):
        self.avatar = avatar
        self.caption = caption
        self.full_info = full_info
        self.apartment_photos = apartment_photos


# –§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ UserForm
def get_form(chat_id, only_profile: bool = False, pk='default'):
    from lib import get_pk_from_chat_id, get_current_age_name, get_price_to_view
    from bot.models import UserGeneralInformation, UserStatus, UserCriteria
    if pk == 'default':
        pk = get_pk_from_chat_id(chat_id)
    logging.warning(f'pk :: {pk}')
    user = UserGeneralInformation.objects.filter(pk=pk).first()
    logging.warning(f'user ::: {user}')
    user_status = UserStatus.objects.filter(status_for_user=user)[0]
    user_criteria = UserCriteria.objects.filter(for_user=user)[0]
    # ----------- –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–æ–ª–µ–µ –¥–≤—É—Ö —Ä–∞–∑ ------------ #
    user_intention = get_current_intention(user_status.user_intention)
    user_age = user.user_age
    # ---------------------------------------------------------------- #
    neighbor_emoji = 'üßç‚Äç‚ôÇ‚Äç'
    if user_criteria.neighbor_gender == 2:
        neighbor_emoji = 'üßç‚Äç‚ôÄ'
    # –†–∞—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è tg
    user_telegram = f'<b>–°—Å—ã–ª–∫–∞ tg:</b>\n@{user.user_tg}\n'
    if user.user_tg == 'null':
        user_telegram = ''
    # –ß—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –Ω–µ–∫—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î, –≤ –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤—ã–≤–æ–¥ –∞–Ω–∫–µ—Ç—ã –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    # –°—É—â–µ—Å—Ç–≤—É—é—Ç –≤—ã–∑–æ–≤—ã, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–Ω–∫–µ—Ç–∞, –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω–µ—Ç –Ω—É–∂–¥—ã –∑–∞–ø–æ–ª–Ω—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é full_info
    if not only_profile:
        full_info = f'<b>–ò–º—è:</b>\n{user.name}\n' \
                    f'<b>–û —Å–µ–±–µ:</b>\n{user.user_about}\n' \
                    f'<b>–í–æ–∑—Ä–∞—Å—Ç:</b>\n{user_age}\n' \
                    f'<b>–ü–æ–ª:</b>\n{get_current_gender(user.user_gender)}\n' \
                    f'<b>–ö—É—Ä—Å:</b>\n{get_current_class(user.user_class)}\n' \
                    f'<b>–¢–≤–æ–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏:</b>\n{user.user_vk}\n' \
                    f'{user_telegram}' \
                    f'<b>–ö–∞–∫–æ–≥–æ —Å–æ—Å–µ–¥–∞ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏:</b>\n{user.neighbor_about}\n' \
                    f'<b>–ñ–µ–ª–∞–µ–º—ã–π –ø–æ–ª —Å–æ—Å–µ–¥–∞:</b>\n{get_current_neighbor_gender(user_criteria.neighbor_gender)}\n' \
                    f'<b>–ñ–µ–ª–∞–µ–º—ã–π –∫—É—Ä—Å —Å–æ—Å–µ–¥–∞:</b>\n{get_current_neighbor_class(user_criteria.neighbor_class)}\n' \
                    f'<b>–ò—â–µ—à—å:</b>\n{user_intention}\n'
    else:
        full_info = 'None'
    caption = f'<b>{user.name}</b>, {user_age} {get_current_age_name(user_age)}, ' \
              f'{get_current_class(user.user_class)}\n\n' \
              f'<b>–ò—â—É:</b> {user_intention.lower()}\n\n' \
              f'<b>‚ÑπÔ∏è –û —Å–µ–±–µ:</b> \n{user.user_about}\n\n' \
              f'<b>{neighbor_emoji} –ö–∞–∫–æ–≥–æ —Å–æ—Å–µ–¥–∞ —Ö–æ—á—É –Ω–∞–π—Ç–∏:</b>\n{user.neighbor_about}\n'
    if user_intention == '–°–æ—Å–µ–¥–∞ –≤ —Å–≤–æ—é –∫–≤–∞—Ä—Ç–∏—Ä—É':
        from bot.models import ApartmentOwner
        apartment_owner = ApartmentOwner.objects.filter(apartment_owner=user)[0]
        if not only_profile:
            full_info += f'<b>–°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã:\n</b>{apartment_owner.metro}\n' \
                     f'<b>–ê–¥—Ä–µ—Å –∫–≤–∞—Ä—Ç–∏—Ä—ã:</b>\n{apartment_owner.address}\n' \
                     f'<b>–í—Ä–µ–º—è –¥–æ –∫–æ—Ä–ø—É—Å–æ–≤ –≤—ã—à–∫–∏ –æ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã:</b>\n{apartment_owner.time_to_hse}\n' \
                     f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ:</b>\n{apartment_owner.price}\n' \
                     f'<b>–ü—Ä–æ –∫–≤–∞—Ä—Ç–∏—Ä—É:</b>\n{apartment_owner.about_apartment}\n'
        caption += f'\n<i>–û –∫–≤–∞—Ä—Ç–∏—Ä–µ:</i>\n\n' \
                   f'<b>üí≤ –¶–µ–Ω–∞: </b>{get_price_to_view(apartment_owner.price)} ‚ÇΩ\n' \
                   f'<b>‚ìÇÔ∏è –°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ: </b>{apartment_owner.metro}\n' \
                   f'<b>üìç –ê–¥—Ä–µ—Å: </b>{apartment_owner.address}\n\n' \
                   f'<b>‚è± –í—Ä–µ–º—è –¥–æ –∫–æ—Ä–ø—É—Å–æ–≤ –≤—ã—à–∫–∏:</b>\n{apartment_owner.time_to_hse}\n\n' \
                   f'<b>‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã:</b>\n{apartment_owner.about_apartment}'
        photos = apartment_owner.apartment_images
        media = types.MediaGroup()
        for photo in photos:
            media.attach_photo(photo)
        user_form = UserForm(avatar=user.avatar, caption=caption, full_info=full_info, apartment_photos=media)
    else:
        if not only_profile:
            full_info += f'<b>–¶–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è —É—Å—Ç—Ä–æ–∏—Ç –∑–∞ –∫–≤–∞—Ä—Ç–∏—Ä—É:</b>\n{user_criteria.required_price}\n' \
                         f'<b>–°—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É</b>\n{user_criteria.required_metro}'
        caption += f'\n<b>üí≤ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ –∫–≤–∞—Ä—Ç–∏—Ä—É: </b>{get_price_to_view(user_criteria.required_price)} ‚ÇΩ\n' \
                   f'\n<b>‚ìÇÔ∏è –°—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –∏—â—É –∫–≤–∞—Ä—Ç–∏—Ä—É</b>\n{user_criteria.required_metro}'
        user_form = UserForm(avatar=user.avatar, caption=caption, full_info=full_info, apartment_photos='None')
    return user_form

# ---------------------------------------------------------------------------------------------------------------------#

# --------------------------------- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –ë–î -------------------------------------#


def get_current_intention(db_intention):
    if db_intention == 1:
        return '–°–æ—Å–µ–¥–∞ –≤ —Å–≤–æ—é –∫–≤–∞—Ä—Ç–∏—Ä—É'
    if db_intention == 2:
        return '–ö–≤–∞—Ä—Ç–∏—Ä—É'


def get_current_class(db_class):
    if db_class == 7:
        return '–í—ã–ø—É—Å–∫–Ω–∏–∫'
    else:
        return f'{db_class} –∫—É—Ä—Å'


def get_current_gender(db_gender):
    if db_gender:
        return '–ú'
    else:
        return '–ñ'


def get_current_neighbor_gender(db_neighbor_gender):
    if db_neighbor_gender == 1:
        return '–í–∞–∂–µ–Ω, –º—É–∂—Å–∫–æ–π'
    elif db_neighbor_gender == 2:
        return '–í–∞–∂–µ–Ω, –∂–µ–Ω—Å–∫–∏–π'
    else:
        return '–ù–µ–≤–∞–∂–µ–Ω'


def get_current_neighbor_class(db_neighbor_class):
    if db_neighbor_class == 6:
        return '–ù–µ–≤–∞–∂–µ–Ω'
    elif db_neighbor_class == 1:
        return '–í–∞–∂–µ–Ω, 1-2'
    elif db_neighbor_class == 2:
        return '–í–∞–∂–µ–Ω, 3-4'
    elif db_neighbor_class == 3:
        return '–í–∞–∂–µ–Ω, 5-6'
    elif db_neighbor_class == 4:
        return '–í–∞–∂–µ–Ω, 1-4'
    else:
        return '–í–∞–∂–µ–Ω, –≤—ã–ø—É—Å–∫–Ω–∏–∫'

# ---------------------------------------------------------------------------------------------------------------------#
